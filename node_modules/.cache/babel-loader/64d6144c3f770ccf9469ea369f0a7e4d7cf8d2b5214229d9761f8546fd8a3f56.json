{"ast":null,"code":"// src/firebase.js\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { getAuth, setPersistence, browserLocalPersistence } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY || \"AIzaSyAJBVh2PH6Uri4tNyHF5F3XFn-hBCyY0WI\",\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN || \"rohith-59f34.firebaseapp.com\",\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID || \"rohith-59f34\",\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET || \"rohith-59f34.firebasestorage.app\",\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID || \"347642983569\",\n  appId: process.env.REACT_APP_FIREBASE_APP_ID || \"1:347642983569:web:a1dfaa991c2f3c7bf9bb30\"\n};\n\n// Prevent re-initialization during fast refresh/HMR\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\n// Persist auth indefinitely (until signOut), so users remain logged in across months\nsetPersistence(auth, browserLocalPersistence).catch(() => {\n  // No-op: fallback to default persistence if setting fails\n});\nexport default app;","map":{"version":3,"names":["initializeApp","getApps","getAuth","setPersistence","browserLocalPersistence","getFirestore","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","app","length","auth","db","catch"],"sources":["C:/Users/rohith/rohith_pet_store/src/firebase.js"],"sourcesContent":["// src/firebase.js\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport { getAuth, setPersistence, browserLocalPersistence } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY || \"AIzaSyAJBVh2PH6Uri4tNyHF5F3XFn-hBCyY0WI\",\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN || \"rohith-59f34.firebaseapp.com\",\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID || \"rohith-59f34\",\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET || \"rohith-59f34.firebasestorage.app\",\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID || \"347642983569\",\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID || \"1:347642983569:web:a1dfaa991c2f3c7bf9bb30\"\r\n};\r\n\r\n// Prevent re-initialization during fast refresh/HMR\r\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n\r\n// Persist auth indefinitely (until signOut), so users remain logged in across months\r\nsetPersistence(auth, browserLocalPersistence).catch(() => {\r\n  // No-op: fallback to default persistence if setting fails\r\n});\r\n\r\nexport default app;"],"mappings":"AAAA;AACA,SAASA,aAAa,EAAEC,OAAO,QAAQ,cAAc;AACrD,SAASC,OAAO,EAAEC,cAAc,EAAEC,uBAAuB,QAAQ,eAAe;AAChF,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B,IAAI,yCAAyC;EAC3FC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B,IAAI,8BAA8B;EACxFC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B,IAAI,cAAc;EACtEC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC,IAAI,kCAAkC;EAClGC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC,IAAI,cAAc;EACvFC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW,yBAAyB,IAAI;AAClD,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGpB,OAAO,CAAC,CAAC,CAACqB,MAAM,GAAGrB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGD,aAAa,CAACM,cAAc,CAAC;AAE3E,OAAO,MAAMiB,IAAI,GAAGrB,OAAO,CAACmB,GAAG,CAAC;AAChC,OAAO,MAAMG,EAAE,GAAGnB,YAAY,CAACgB,GAAG,CAAC;;AAEnC;AACAlB,cAAc,CAACoB,IAAI,EAAEnB,uBAAuB,CAAC,CAACqB,KAAK,CAAC,MAAM;EACxD;AAAA,CACD,CAAC;AAEF,eAAeJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}